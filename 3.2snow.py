import numpy as np
import cv2


#Cargar la mascara
imagen = cv2.imread('snowboard.jpg',0)
_, imagen = cv2.threshold(imagen, 96, 255, cv2.THRESH_BINARY)
imagen = cv2.bitwise_not(imagen)


kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(imagen,kernel,iterations = 2)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_OPEN,kernel)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
transformacion = cv2.erode(transformacion,kernel,iterations = 1)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_OPEN,kernel)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)
kernel = np.ones((9,9),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_OPEN,kernel)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)
kernel = np.ones((5,5),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_OPEN,kernel)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
transformacion = cv2.erode(transformacion,kernel,iterations = 1)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)
kernel = np.ones((5,5),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_OPEN,kernel)
transformacion = cv2.erode(transformacion,kernel,iterations = 1)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)
kernel = np.ones((5,5),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_OPEN,kernel)
transformacion = cv2.erode(transformacion,kernel,iterations = 1)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)
kernel = np.ones((5,5),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_OPEN,kernel)
transformacion = cv2.erode(transformacion,kernel,iterations = 2)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)
kernel = np.ones((5,5),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_OPEN,kernel)
kernel = np.ones((11,11),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
kernel = np.ones((9,9),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_OPEN,kernel)

kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 3)
kernel = np.ones((11,11),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 2)
kernel = np.ones((7,7),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)
kernel = np.ones((7,7),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)
kernel = np.ones((7,7),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)
kernel = np.ones((7,7),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)
kernel = np.ones((7,7),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)
kernel = np.ones((7,7),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)
kernel = np.ones((7,7),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)
kernel = np.ones((7,7),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)
kernel = np.ones((7,7),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)
kernel = np.ones((7,7),np.uint8)
transformacion = cv2.morphologyEx(transformacion,cv2.MORPH_CLOSE,kernel)
kernel = np.ones((3,3),np.uint8)
transformacion = cv2.dilate(transformacion,kernel,iterations = 1)

transformacion = cv2.bitwise_not(transformacion)
cv2.imwrite('sombra.jpg',transformacion )

#Mostrar el resultado y salir
cv2.imshow('resultado',transformacion)
cv2.waitKey(0)
cv2.destroyAllWindows()
